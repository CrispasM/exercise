import { nodes, edges } from './data.js';
import * as d3 from 'd3-force';

const width = 1;
const height = 1;

const simulation = d3.forceSimulation(nodes)
  .force('link', d3.forceLink(edges).id(d => d.id).distance(0.1))
  .force('charge', d3.forceManyBody().strength(-0.05))
  .force('center', d3.forceCenter(width / 2, height / 2))
  .stop();


for (let i = 0; i < 300; ++i) simulation.tick();


const minX = Math.min(...nodes.map(n => n.x));
const maxX = Math.max(...nodes.map(n => n.x));
const minY = Math.min(...nodes.map(n => n.y));
const maxY = Math.max(...nodes.map(n => n.y));

for (let n of nodes) {
  n.x = (n.x - minX) / (maxX - minX);
  n.y = (n.y - minY) / (maxY - minY);
}

console.log("Optimized node positions:");
console.table(nodes.map(n => ({ id: n.id, x: n.x.toFixed(4), y: n.y.toFixed(4) })));
